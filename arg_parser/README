***********************************************************
*
*
*  Python-esk Argument Parser by Brandon Roberts
*  Version 1.2 Update : Static Librarified
*
*
***********************************************************

** Contains **
--------------
Harmony/arg_parser/template_version/arg_parser.h
Harmony/arg_parser/template_version/arg_parser.cpp


** Issues **
------------
Listed as 'TO DO' in code


** Dependencies **
------------------
boost/lexical_cast.hpp - for lexical_cast


** Compiling **
---------------
if included in main.cpp:

  g++ -c main.cpp -I ~/workspace -std=c++1z
  g++ main.o -o main -L ~/workspace/Harmony/ -lharmony-basic

  clang++ -c main.cpp -I ~/workspace -std=c++1z
  clang++ main.o -o main -L ~/workspace/Harmony/ -lharmony-basic

ie. C++17 in Harmony's libharmony-basic.a


** READ **
----------

General argument parser, inspired by the arg_parser in python ( so has very similar interface )


** Interface **
---------------

Parser Object :

  Construction : 
      Parser parser_name(int argc, char** argv, const std::string& description = "")
      -- argc = argument count , argv = argument array , desc = parser description (for help string)

  To add arguments : 
      add_argument<type>(string id, string name, string description, bool required = false)
      -- type = argument value type , id = id flag of arg (-), name = name flag of arg (-- & index),
         req = if argument is required

  Check if has argument for passed name : 
      has(string name)
      -- name = name given in add_argument
      NOTE : Returns true if argument was passed in and argument was in add_argument

  To get argument : 
      get<type>(string name)
      -- type = arguments type from add_argument , name = name given in add_argument


** Example **
-------------

  main.cpp {

    #include "Harmony/arg_parser/template_version/arg_parser.h"
    #include <iostream> // cout

    int main(int argc, char** argv) {

      Parser parser(argc, argv, "This is an argument parser");
 
      parser.add_argument<int>("-x", "--xtra", "This is the number of extras", true);
      parser.add_argument<double>("-p", "--perc", "This is the percent of people");
      parser.add_argument<std::string>("-w", "--word", "This is their favorite word");

      std::cout << parser.get<int>("xtra") << '\n';
      if(parser.has("perc") && parser.has("word")) {
        std::cout << parser.get<double>("perc") << '\n';
        std::cout << parser.get<std::string>("word") << '\n';
      }

      return 0;
 
    }

  }

  g++ -c main.cpp -I ~/workspace -std=c++1z
  g++ main.o -o main -L ~/workspace/Harmony/ -lharmony-basic

  ./main -p 0.13 // ERROR : No -x or --xtra flag, which is required
  ./main -x 13 -p 0.124 --word hello
